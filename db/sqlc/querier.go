// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"context"
)

type Querier interface {
	CreateGenre(ctx context.Context, arg CreateGenreParams) (Genre, error)
	CreatePlaylist(ctx context.Context, arg CreatePlaylistParams) (Playlist, error)
	CreatePlaylistSong(ctx context.Context, arg CreatePlaylistSongParams) (PlaylistsSong, error)
	CreateSong(ctx context.Context, arg CreateSongParams) (Song, error)
	CreateSongGenre(ctx context.Context, arg CreateSongGenreParams) (SongsGenre, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteGenre(ctx context.Context, id int64) error
	DeletePlaylist(ctx context.Context, id int64) error
	DeletePlaylistSong(ctx context.Context, id int64) error
	DeleteSong(ctx context.Context, id int64) error
	DeleteSongGenre(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetGenre(ctx context.Context, id int64) (Genre, error)
	GetPlaylist(ctx context.Context, id int64) (Playlist, error)
	GetPlaylistSong(ctx context.Context, id int64) (PlaylistsSong, error)
	GetSong(ctx context.Context, id int64) (Song, error)
	GetSongGenre(ctx context.Context, id int64) (SongsGenre, error)
	GetUser(ctx context.Context, id int64) (User, error)
	ListGenres(ctx context.Context, arg ListGenresParams) ([]Genre, error)
	ListPlaylists(ctx context.Context, arg ListPlaylistsParams) ([]Playlist, error)
	ListPlaylistsSongs(ctx context.Context, arg ListPlaylistsSongsParams) ([]PlaylistsSong, error)
	ListSongs(ctx context.Context) ([]Song, error)
	ListSongsGenres(ctx context.Context, arg ListSongsGenresParams) ([]SongsGenre, error)
	ListUsers(ctx context.Context) ([]User, error)
	UpdatePlaylist(ctx context.Context, arg UpdatePlaylistParams) (Playlist, error)
	UpdateSong(ctx context.Context, arg UpdateSongParams) (Song, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	Updategenre(ctx context.Context, arg UpdategenreParams) (Genre, error)
}

var _ Querier = (*Queries)(nil)
